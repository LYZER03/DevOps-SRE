# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

env:
  MYSQL_DATABASE: test
  MYSQL_USER: root
  MYSQL_PASSWORD: 
  MYSQL_HOST: mysql-master
  NODE_ENV: test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: project/backend

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image
        image: mysql
        env:
          MYSQL_DATABASE: ${{env.MYSQL_DATABASE}}
          MYSQL_USER: ${{env.MYSQL_USER}}
          MYSQL_PASSWORD: ${{env.MYSQL_PASSWORD}}
          MYSQL_ROOT_PASSWORD: ${{env.MYSQL_PASSWORD}}

        ports:
          # Opens tcp port 3306 on the host and service container
          - 3306:3306

    strategy:
      matrix:
        node-version: ['18.x']
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    
    steps:
    - name: Wait for MySQL to be ready
      run: sleep 10
        
    - name: Import MySQL Data
      run: |
        mysql -h${{env.MYSQL_HOST}} -u${{env.MYSQL_USER}} -p${{env.MYSQL_PASSWORD}} ${{env.MYSQL_DATABASE}} < dump.sql
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'project/backend/package-lock.json'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
